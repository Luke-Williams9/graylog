##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen				80 default_server;
	listen 				[::]:80 default_server;
	listen 				443 ssl default_server;
	listen 				[::]:443 ssl default_server;
	ssl_certificate 	/etc/nginx/cert/fullchain.pem;
	ssl_certificate_key /etc/nginx/cert/privkey.pem;
	server_name			${NGINX_HOST};
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#

	root 				/var/www/html;

	# Add index.php to the list if you are using PHP
	index 				index.html index.htm index.nginx-debian.html;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		autoindex 		on;
		try_files 		$uri $uri/ =404;

	}
	location /graylog/ {
		# https://www.reddit.com/r/sysadmin/comments/iag5el/graylog_behind_apache_reverse_proxy_blank_web_page/	
		proxy_set_header Host $http_host;
		proxy_set_header X-Forwarded-Host $host;
		proxy_set_header X-RealIP $remote_addr;
		proxy_set_header X-Forwarded-Server $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Graylog-Server-URL https://${NGINX_HOST}/graylog/; rewrite ^/graylog/(.*) /$1 break;
		proxy_pass 	 	 http://graylog:9000;
	}
}

